{"ast":null,"code":"var _jsxFileName = \"D:\\\\whether appllication\\\\wso2\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [city, setCity] = useState('');\n  const cities = ['london', 'newyork', 'tokyo', 'sydney'];\n  const fetchWeather = async cityName => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:8080/weather/${cityName}`);\n      if (!response.ok) throw new Error('Weather data not found');\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCustomCity = async e => {\n    e.preventDefault();\n    if (city.trim()) {\n      await fetchWeather(city.toLowerCase());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Info Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-buttons\",\n      children: cities.map(cityName => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchWeather(cityName),\n        className: \"city-btn\",\n        children: cityName.charAt(0).toUpperCase() + cityName.slice(1)\n      }, cityName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCustomCity,\n      className: \"custom-city\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city name\",\n        className: \"city-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: [weatherData.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"condition\",\n          children: weatherData.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"humidity\",\n          children: [\"Humidity: \", weatherData.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: [\"Updated: \", new Date(weatherData.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mJZswvkTKcnm8T+G+cadKaKlSdk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","weatherData","setWeatherData","loading","setLoading","error","setError","city","setCity","cities","fetchWeather","cityName","response","fetch","ok","Error","data","json","err","message","handleCustomCity","e","preventDefault","trim","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","charAt","toUpperCase","slice","onSubmit","type","value","onChange","target","placeholder","temperature","condition","humidity","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["D:/whether appllication/wso2/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [city, setCity] = useState('');\r\n\r\n  const cities = ['london', 'newyork', 'tokyo', 'sydney'];\r\n\r\n  const fetchWeather = async (cityName) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/weather/${cityName}`);\r\n      if (!response.ok) throw new Error('Weather data not found');\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCustomCity = async (e) => {\r\n    e.preventDefault();\r\n    if (city.trim()) {\r\n      await fetchWeather(city.toLowerCase());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-container\">\r\n      <h1>Weather Info Service</h1>\r\n      \r\n      <div className=\"city-buttons\">\r\n        {cities.map(cityName => (\r\n          <button \r\n            key={cityName}\r\n            onClick={() => fetchWeather(cityName)}\r\n            className=\"city-btn\"\r\n          >\r\n            {cityName.charAt(0).toUpperCase() + cityName.slice(1)}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={handleCustomCity} className=\"custom-city\">\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          placeholder=\"Enter city name\"\r\n          className=\"city-input\"\r\n        />\r\n        <button type=\"submit\" className=\"search-btn\">Search</button>\r\n      </form>\r\n\r\n      {loading && <div className=\"loading\">Loading...</div>}\r\n      {error && <div className=\"error\"> {error}</div>}\r\n      \r\n      {weatherData && (\r\n        <div className=\"weather-card\">\r\n          <h2>{weatherData.city}</h2>\r\n          <div className=\"weather-info\">\r\n            <div className=\"temp\">{weatherData.temperature}Â°C</div>\r\n            <div className=\"condition\">{weatherData.condition}</div>\r\n            <div className=\"humidity\">Humidity: {weatherData.humidity}%</div>\r\n            <div className=\"timestamp\">\r\n              Updated: {new Date(weatherData.timestamp).toLocaleString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}